/* custom grid system */
.cols(@colspan: 1; @colcount: 1) when (@colcount =< @colspan) {
    .col-@{colcount}-@{colspan} { width: (@colcount * 100% / @colspan); }

    .cols(@colspan; (@colcount + 1));
}

[class^='col-'] {
    width: 100%;
    padding: 1em 0 1em 0;

    @media only screen and (min-width: 700px) {
        float: left;
        padding: 1em 2em 1em 0;

        &:last-of-type { padding-right: 0; }
    }
}

.grid {
    @media only screen and (min-width: 320px) and (max-width: 480px) {
        .col-1-5 {
            float: left;
            width: 50%;
            padding: 1em 1em 1em 0;

            &:nth-of-type(2n) { padding-right: 0; }
        }
    }

    @media only screen and (min-width: 480px) and (max-width: 700px) {
        .col-1-3 {
            float: left;
            width: 50%;
            padding: 1em 1em 1em 0;

            &:nth-of-type(2n) { padding-right: 0; }
        }

        .col-1-5 {
            float: left;
            width: 33.33%;
            padding: 1em 1em 1em 0;

            &:nth-of-type(3n) { padding-right: 0; }
        }
    }

    @media only screen and (min-width: 700px) {
        .cols(5);

        .cols(3);

        .cols(2);
    }

    &:after { .clearfloat; }
}